{"version":3,"sources":["webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/auth.component.html","webpack:///./src/app/admin/auth.component.ts","webpack:///./src/app/admin/auth.guard.ts"],"names":[],"mappings":";;;;;;;;;AAAA,mU;;;;;;;;;;;;;;;;;;;ACA0C;AACD;AACW;AAKpD;IACI,wBAAoB,MAAc,EAAU,IAAiB;QAAzC,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAElE,+BAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;IAC7C,CAAC;IANQ,cAAc;QAH1B,+DAAS,CAAC;YACP,mGAAmC;SACtC,CAAC;+EAE8B,sDAAM,EAAgB,+DAAW;OADpD,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;;;;;;;;;;;;;ACPc;AACM;AACF;AACE;AACE;AACE;AACV;AAEzC,IAAI,OAAO,GAAG,4DAAY,CAAC,QAAQ,CAAC;IAChC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6DAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,+DAAc,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,KAAI,EAAE;IACzE,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE;CACrC,CAAC,CAAC;AAOH;IAAA;IAA2B,CAAC;IAAf,WAAW;QALvB,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,OAAO,CAAC;YAC7C,SAAS,EAAE,CAAC,qDAAS,CAAC;YACtB,YAAY,EAAE,CAAC,6DAAa,EAAE,+DAAc,CAAC;SAChD,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnBxB,sNAAsN,cAAc,kwB;;;;;;;;;;;;;;;;;;;ACA1L;AAED;AACW;AAKpD;IAKI,uBAAoB,MAAc,EAAU,IAAiB;QAAzC,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAElE,oCAAY,GAAZ,UAAa,IAAY;QAAzB,iBAaC;QAZG,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,0BAAyB;iBACxE,SAAS,CAAC,kBAAQ;gBACf,IAAI,QAAQ,EAAE;oBACV,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;iBAC5C;gBACD,KAAI,CAAC,YAAY,GAAG,uBAAuB,CAAC;YAChD,CAAC,CAAC;YACN,4CAA4C;SAC/C;aAAM;YACH,IAAI,CAAC,YAAY,GAAG,mBAAmB,CAAC;SAC3C;IACL,CAAC;IApBQ,aAAa;QAHzB,+DAAS,CAAC;YACP,iGAAkC;SACrC,CAAC;+EAM8B,sDAAM,EAAgB,+DAAW;OALpD,aAAa,CAqBzB;IAAD,oBAAC;CAAA;AArByB;;;;;;;;;;;;;;;;;;;;ACRiB;AAC2C;AAClC;AAGpD;IACI,mBAAoB,MAAc,EAAU,IAAiB;QAAzC,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAElE,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YAC1B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;YACzC,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IATQ,SAAS;QADrB,gEAAU,EAAE;+EAEmB,sDAAM,EAAgB,+DAAW;OADpD,SAAS,CAUrB;IAAD,gBAAC;CAAA;AAVqB","file":"admin-admin-module.js","sourcesContent":["module.exports = \"<div class=\\\"bg-info p-2 text-white\\\">\\r\\n    <h3>Placeholder for Admin Features</h3>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"text-center\\\">\\r\\n    <button class=\\\"btn btn-secondary m-1\\\" routerLink=\\\"/\\\">Go back</button>\\r\\n    <button class=\\\"btn btn-primary m-1\\\" (click)=\\\"logout()\\\">Log out</button>\\r\\n</div>\"","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from '../model/auth.service';\r\n\r\n@Component({\r\n    templateUrl: \"admin.component.html\"\r\n})\r\nexport class AdminComponent {\r\n    constructor(private router: Router, private auth: AuthService) { }\r\n\r\n    logout() {\r\n        this.auth.clear();\r\n        this.router.navigateByUrl(\"/admin/auth\");\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { AuthComponent } from \"./auth.component\";\r\nimport { AdminComponent } from \"./admin.component\";\r\nimport { AuthGuard } from './auth.guard';\r\n\r\nlet routing = RouterModule.forChild([\r\n    { path: \"auth\", component: AuthComponent },\r\n    { path: \"main\", component: AdminComponent, canActivate: [AuthGuard]/**/ },\r\n    { path: \"**\", redirectTo: \"main\" }\r\n]);\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule, routing],\r\n    providers: [AuthGuard],\r\n    declarations: [AuthComponent, AdminComponent]\r\n})\r\nexport class AdminModule { }","module.exports = \"<div class=\\\"bg-info p-2 text-center text-white\\\">\\r\\n    <h3>SportsStore Admin</h3>\\r\\n</div>\\r\\n<div class=\\\"bg-danger mt-2 p-2 text-center text-white\\\" *ngIf=\\\"errorMessage != null\\\">\\r\\n    {{errorMessage}}\\r\\n</div>\\r\\n<div class=\\\"p-2\\\">\\r\\n    <form novalidate #form=\\\"ngForm\\\" (ngSubmit)=\\\"authenticate(form)\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Name</label>\\r\\n            <input class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\" required />\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Password</label>\\r\\n            <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" required />\\r\\n        </div>\\r\\n        <div class=\\\"text-center\\\">\\r\\n            <button class=\\\"btn btn-secondary m-1\\\" routerLink=\\\"/\\\">Go back</button>\\r\\n            <button class=\\\"btn btn-primary m-1\\\" type=\\\"submit\\\">Log In</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"","import { Component } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from '../model/auth.service';\r\n\r\n@Component({\r\n    templateUrl: \"auth.component.html\"\r\n})\r\nexport class AuthComponent {\r\n    public username: string;\r\n    public password: string;\r\n    public errorMessage: string;\r\n\r\n    constructor(private router: Router, private auth: AuthService) { }\r\n\r\n    authenticate(form: NgForm) {\r\n        if (form.valid) {\r\n            this.auth.authenticate(this.username, this.password)// perform authentication\r\n                .subscribe(response => {\r\n                    if (response) {\r\n                        this.router.navigateByUrl(\"/admin/main\");\r\n                    }\r\n                    this.errorMessage = \"Authentication Failed\";\r\n                })\r\n            // this.router.navigateByUrl(\"/admin/main\");\r\n        } else {\r\n            this.errorMessage = \"Form Data Invalid\";\r\n        }\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\r\nimport { AuthService } from \"../model/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard {\r\n    constructor(private router: Router, private auth: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        if (!this.auth.authenticated) {\r\n            this.router.navigateByUrl(\"/admin/auth\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}"],"sourceRoot":""}